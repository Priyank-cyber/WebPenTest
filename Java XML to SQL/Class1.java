import java.io.IOException;
import java.util.Scanner;							//Packages 

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.ThreadLocalRandom;

public class Class1 {
	private static final Connection NULL = null;

	public static void main(String[] args) {					//COMMAND LINE ARG CORRESPONDING TO XML FILE PATH MUST BE PASSED
		
		try {

		//String corresponding to ID no of Vulnerabilities as provided by the ZAP config file.
		//They are ordered in ascending order to correspond to appropriate letters.

		String[] plugid = {"2", "3","10010", "10011", "10012", "10015", "10016", "10017", "10019", "10020", "10021",
		          "10023", "10024", "10025", "10026", "10027", "10032", "10040", "10105", "10202", "50001", "90001", "90011",
		          "90022", "90033"};

		StringBuilder code = new StringBuilder();	//to build the code letter by letter
		
		String Server = "*servername*";			//enter server name
		String port = "*port_number*";			//enter port number (which SQL is listening to)
		String user = "*username*";			//enter username
		String password = "*password*";			//enter password (SQL Authentication)
		String database = "*dbname*";			//enter database name
		String jdbcurl;
		
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("YYYY-MM-DD");	//These functions in order to provide Date and Time in appropriate
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm:ss");		//format. There may be some redundant or useless packages.
		LocalDateTime now = LocalDateTime.now();
		
		Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		jdbcurl = "jdbc:sqlserver://" + Server + ":" + port +";user=" + 		//DB url
					user + ";password=" + password + ";databasename=" 
					+ database + "";
		Connection con = null;
		con = DriverManager.getConnection(jdbcurl);					//form connection
		
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();		//DOM used to parse XML file
		DocumentBuilder builder;
		
			builder = factory.newDocumentBuilder();
			Document doc = builder.parse(args[0]);					//COMMAND LINE ARG CORRESPONDING TO XML FILE PATH MUST BE PASSED
			NodeList alerts = doc.getElementsByTagName("pluginid");			//looking for tag pluginid whose field values correspond to values in 
			NodeList sites = doc.getElementsByTagName("site");			//string array plugid
			Node nam = sites.item(0);		//get url being scanned
			Element na = (Element) nam;
			
			for(int i=0;i<alerts.getLength();i++) {
				System.out.println(alerts.item(i).getTextContent());
				for(int j=0;j<plugid.length;j++)
				{
					if(alerts.item(i).getTextContent().equals(plugid[j])) {
						
						char b = (char) ('a'+j);
						code.append(b);					//To get resultant code
					}
				}
			}
			String _code = code.toString();
			
			//SQL Query to be executed to populate SQL Database

			String st = "insert into *Table_Name* (ID,Date,Time,URL,Period,Code,Fails) Values ("  
					+ "'" + Integer.toString(ThreadLocalRandom.current().nextInt(1000, 9999)) + "'" + ","  //ID is a random 4 digit number
					+ "'" + java.time.LocalDate.now() + "'" + "," 
					+ "'" + dtf.format(now) + "'" + "," 
					+ "'" + na.getAttribute("name") + "'" + "," 
					+ "'" + "2" + "'" + "," 
					+ "'" + _code + "'" + "," 
					+ "'" + Integer.toString(_code.length()) + "'" + ")";  
			
			System.out.println(st);
			PreparedStatement pst = con.prepareStatement(st);
			pst.execute();				//Execute SQL Query
			
			
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block				//EXCEPTIONS
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
}
}
			